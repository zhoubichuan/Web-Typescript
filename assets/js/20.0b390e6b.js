(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{185:function(a,s,t){"use strict";t.r(s);var e=t(0),l=Object(e.a)({},(function(){var a=this.$createElement;this._self._c;return this._m(0)}),[function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"安装-gitlab"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-gitlab"}},[a._v("#")]),a._v(" 安装 Gitlab")]),a._v(" "),t("h2",{attrs:{id:"_1-拉取-gitlab-镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-拉取-gitlab-镜像"}},[a._v("#")]),a._v(" 1. 拉取 Gitlab 镜像")]),a._v(" "),t("p",[a._v("这里我们拉取最新的 gitlab-ce 镜像")]),a._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker pull gitlab/gitlab-ce\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h2",{attrs:{id:"_2-创建-gitlab-容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建-gitlab-容器"}},[a._v("#")]),a._v(" 2. 创建 Gitlab 容器")]),a._v(" "),t("p",[a._v("我们使用 docker run 命令启动一个新的 Gitlab 容器")]),a._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("mkdir /home/gitlab #创建Gitlab工作目录\ndocker run -itd -p 443:443 \\\n-p 8899:8899 \\\n-p 333:333 \\\n--name gitlab \\\n--restart always \\\n-v /home/gitlab/config:/etc/gitlab \\\n-v /home/gitlab/logs:/var/log/gitlab \\\n-v /home/gitlab/data:/var/opt/gitlab \\\ngitlab/gitlab-ce\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br")])]),t("p",[a._v("--restart: 当 Docker 重启时，容器自动启动，否则就需要使用 docker restart 启动\ngitlab 端口映射规则：最好内外端口映射一致，gitlab 会根据你的配置文件调整服务端口。如外部访问 8899，内外都配置 8899\n一般 Gitlab 有三个端口要使用：ssh，https，主服务地址。\nssh 默认是 22，这里我改为了 333，下方配置文件内也要改为 333\n然后我们在防火墙添加 333 和 8899 端口的放行，并重载防火墙")]),a._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("firewall-cmd --zone=public --add-port=333/tcp --permanent\nfirewall-cmd --zone=public --add-port=8899/tcp --permanent\nsystemctl reload firewalld\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("h2",{attrs:{id:"_3-修改-gitlab-配置文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-修改-gitlab-配置文件"}},[a._v("#")]),a._v(" 3. 修改 Gitlab 配置文件")]),a._v(" "),t("p",[a._v("容器启动后，我们需要修改 Gitlab 配置文件，修改 Gitlab 主服务地址和 SSH 服务地址")]),a._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("vi /home/gitlab/config/gitlab.rb\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("在文件内增加三条配置：\n• external_url: 外部服务访问地址\n• gitlab_rails['gitlab_ssh_host']：SSH 代码拉取地址\n• gitlab_rails['gitlab_shell_ssh_port']：SSH 代码拉取端口")]),a._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("external_url 'http://外部访问域名/地址:端口'\ngitlab_rails['gitlab_ssh_host'] = 'SSH外部访问域名/地址'\ngitlab_rails['gitlab_shell_ssh_port'] = SSH端口\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("h3",{attrs:{id:"如果修改-ssh-端口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如果修改-ssh-端口"}},[a._v("#")]),a._v(" 如果修改 SSH 端口")]),a._v(" "),t("p",[a._v("SSH 默认的端口是 22 。这里内外分开，将 Gitlab 容器内 SSH 端口改为了 333 。\n先进入 Gitlab 容器，直接编辑 /assets/sshd_config 和 /etc/ssh/sshd_config 这两个文件即可。修改最上方的 Port 字段。")]),a._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker exec -it gitlab /bin/bash\nvim /assets/sshd_config\nvim /etc/ssh/sshd_config\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("接着重启 Gitlab")]),a._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker restart gitlab\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h2",{attrs:{id:"_4-启动-gitlab"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-启动-gitlab"}},[a._v("#")]),a._v(" 4. 启动 Gitlab")]),a._v(" "),t("p",[a._v("访问 宿主机:端口 ，查看 Gitlab 启动情况，如果显示 502 ，则代表正在启动中。第一次启动时间可能会有些长。如显示以下界面，代表启动成功。\n修改密码后，默认管理员是 root ，登录进入即可")])])}],!1,null,null,null);s.default=l.exports}}]);